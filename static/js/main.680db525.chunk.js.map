{"version":3,"sources":["assets/logo.svg","pages/Component.js","pages/Main.js","pages/Settings.js","pages/Diary.js","pages/Calender.js","router/index.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","OurDiary","div","MainContainer","SubContainer","logo","ButtonContainer","Main","to","Settings","exact","path","component","Diary","Calender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,iC,QCGnCA,EAASC,IAAOC,OAAV,0LAUNC,EAAWF,IAAOG,IAAV,yLASRC,EAAgBJ,IAAOG,IAAV,2QAWbE,EAAeL,IAAOG,IAAV,0fAsB6BG,GAKzCC,EAAkBP,IAAOG,IAAV,2O,OC5BNK,EA3BF,kBACZ,cAACJ,EAAD,UACG,eAACC,EAAD,WACE,cAACH,EAAD,wBAGA,eAACK,EAAD,WACE,cAAC,IAAD,CAAME,GAAG,SAAT,SACE,cAACV,EAAD,yCAIF,cAAC,IAAD,CAAMU,GAAG,YAAT,SACE,cAACV,EAAD,yCAIF,cAAC,IAAD,CAAMU,GAAG,YAAT,SACE,cAACV,EAAD,sCCIKW,G,MAtBE,kBACb,cAACN,EAAD,UACI,eAACC,EAAD,WACI,cAACH,EAAD,uBAGA,eAACK,EAAD,WACA,cAAC,IAAD,CAAME,GAAG,SAAT,SACA,cAACV,EAAD,oDAIA,cAAC,IAAD,CAAMU,GAAG,YAAT,SACA,cAACV,EAAD,gEClBG,mBAAM,SCAN,mBAAM,YCMN,oBACb,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAWH,IACzC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,UAAWE,IACzC,cAAC,IAAD,CAAUN,GAAG,YCHJO,MAPf,WAEE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.680db525.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.558d056d.svg\";","import styled from '@emotion/styled';\nimport logo from '../assets/logo.svg';\n\nconst Button = styled.button`\nfont-family: 'Jua', sans-serif;\nwidth: 200px;\nbackground-color: white;\nborder: 1.5px solid black;\npadding: 0.5rem;\nfont-size: 1.1rem;\ncursor: pointer;\n`;\n\nconst OurDiary = styled.div`\nborder: 2.5px solid black;\nwidth: min(100% - 2rem, 20rem);\npadding: 2rem 0;\ntext-align: center;\nfont-family: 'Roboto', sans-serif;\nfont-size: 1.25rem;\n`;\n\nconst MainContainer = styled.div`\nheight: 100vh;\npadding: 3rem;\n\n// 엘리먼트 크기가 마음대로 안 될 때는 border-box 적용하기~\nbox-sizing: border-box;\n\ndisplay: flex;\nflex-direction: column;\n`;\n\nconst SubContainer = styled.div`\nborder: 3px solid black;\nborder-top-right-radius: 2.5rem;\nborder-bottom-right-radius: 2.5rem;\npadding: 7rem 0 1.5rem 0;\nflex: 1;\n\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: space-between;\n\nposition: relative;\n::before {\n  content: \"\";\n  width: 80px;\n  height: 80px;\n  color: blue;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: 0;\n  left: 0;\n  background: center / contain no-repeat url(${logo}), white;\n}\n\n`;\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\nwidth: min(100%, 60rem);\nalign-items: center;\njustify-content: space-evenly;\npadding: 2rem 1rem;\nrow-gap: 0.5rem;\n\n@media screen and (max-width: 768px) {\n  flex-direction: column;\n}\n`;\n\nexport { Button, ButtonContainer, OurDiary, MainContainer, SubContainer, };","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport logo from '../assets/logo.svg';\nimport { Button, ButtonContainer, OurDiary, MainContainer, SubContainer, } from '../pages/Component';\n\nconst Main = () => (\n\t<MainContainer>\n    <SubContainer>\n      <OurDiary>\n        OUR DIARY\n      </OurDiary>\n      <ButtonContainer>\n        <Link to=\"/diary\">\n          <Button>\n            일기쓰기\n          </Button>\n        </Link>\n        <Link to=\"/calender\">\n          <Button>\n            달력보기\n          </Button>\n        </Link>\n        <Link to=\"/settings\">\n          <Button>\n            설정\n          </Button>\n        </Link>\n      </ButtonContainer>\n    </SubContainer>\n\t</MainContainer>\n);\n\nexport default Main;\n","import styled from '@emotion/styled';\nimport { Button, ButtonContainer, OurDiary, MainContainer, SubContainer, } from '../pages/Component';\nimport { Link } from 'react-router-dom';\nimport Popup from 'reactjs-popup';\n\nconst Settings = () => (\n    <MainContainer>\n        <SubContainer>\n            <OurDiary>\n                Settings\n            </OurDiary>\n            <ButtonContainer>\n            <Link to=\"/diary\">\n            <Button>\n                O-U 메이트 찾기\n            </Button>\n            </Link>\n            <Link to=\"/settings\">\n            <Button>\n                리마인더 설정\n            </Button>\n            </Link>\n        </ButtonContainer>\n        </SubContainer>\n    </MainContainer>\n);\n\nexport default Settings;","export default () => 'diary';\n\n","export default () => 'calender';\n\n","import { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Main from '../pages/Main';\nimport Settings from '../pages/Settings';\nimport Diary from '../pages/Diary';\nimport Calender from '../pages/Calender';\n\nexport default () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/settings\" component={Settings} />\n      <Route exact path=\"/diary\" component={Diary} />\n      <Route exact path=\"/calender\" component={Calender} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { useEffect } from 'react';\nimport Router from './router';\n\nfunction App() {\n\n  return (\n    <Router />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from \"firebase/app\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB7msYbHGvY_bDdpODCEaHiewyDVi93qUI\",\n  authDomain: \"o-u-diary.firebaseapp.com\",\n  projectId: \"o-u-diary\",\n  storageBucket: \"o-u-diary.appspot.com\",\n  messagingSenderId: \"479004118573\",\n  appId: \"1:479004118573:web:0aa32cb592607dfc4e72a4\",\n  measurementId: \"G-T71P1F1S21\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}